/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ClienteDAO;
import controller.ProdutoDAO;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.Produto;
import utils.Mode;

/**
 *
 * @author rodrigo
 */
public class jFrameTelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form jFrameTelaPrincipal
     */
    public jFrameTelaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        menuCliente = new javax.swing.JMenu();
        menuCadCliente = new javax.swing.JMenuItem();
        menuEditCliente = new javax.swing.JMenuItem();
        menuDelCliente = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuCadPedido = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuCadPro = new javax.swing.JMenuItem();
        menuEditPro = new javax.swing.JMenuItem();
        menuDelPro = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(200, 200));
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        menuCliente.setText("Clientes");

        menuCadCliente.setText("Cadastro");
        menuCadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCadClienteActionPerformed(evt);
            }
        });
        menuCliente.add(menuCadCliente);

        menuEditCliente.setText("Editar");
        menuEditCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditClienteActionPerformed(evt);
            }
        });
        menuCliente.add(menuEditCliente);

        menuDelCliente.setText("Excluir");
        menuDelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDelClienteActionPerformed(evt);
            }
        });
        menuCliente.add(menuDelCliente);

        jMenuBar1.add(menuCliente);

        jMenu2.setText("Pedidos");

        menuCadPedido.setText("Cadastro");
        menuCadPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCadPedidoActionPerformed(evt);
            }
        });
        jMenu2.add(menuCadPedido);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Produtos");

        menuCadPro.setText("Cadastro ");
        menuCadPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCadProActionPerformed(evt);
            }
        });
        jMenu3.add(menuCadPro);

        menuEditPro.setText("Editar");
        menuEditPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEditProActionPerformed(evt);
            }
        });
        jMenu3.add(menuEditPro);

        menuDelPro.setText("Excluir");
        menuDelPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDelProActionPerformed(evt);
            }
        });
        jMenu3.add(menuDelPro);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuCadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCadClienteActionPerformed
        new JFrameCadCliente().setVisible(true); // #TODO: DISPOSE
    }//GEN-LAST:event_menuCadClienteActionPerformed

    private void menuEditClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditClienteActionPerformed
       
        String nome = JOptionPane.showInputDialog("Informe o nome do cliente: ");
        
        
        ArrayList<Cliente> clientes = ClienteDAO.queryByNome(nome);

        if(!clientes.isEmpty())
        {
            Map<Integer,Cliente> clis = new HashMap<Integer,Cliente>();

            String col[] =  {"ID","Nome","Endereço","Telefone"};

            DefaultTableModel tableModel = new DefaultTableModel(col,0);


            jDialogTabela tabela = new jDialogTabela(this,true,tableModel);


            for(Cliente cliente : clientes )
            {
                clis.put(cliente.getId(), cliente);

                Object[] data = {cliente.getId(),cliente.getNome(),
                    cliente.getEndereco(),cliente.getTelefone()};


                tableModel.addRow(data);
            }



            int id = -1;

            id = tabela.showWindow();

            Cliente cli = clis.get(id);

            if(id != -1)
            {
                JFrameCadCliente janela = new JFrameCadCliente(cli,Mode.EDIT);
                janela.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(rootPane,"Nenhum Cliente Selecionado!");
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Cliente Não encontrado!");
    }//GEN-LAST:event_menuEditClienteActionPerformed

    private void menuDelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDelClienteActionPerformed
        String nome = JOptionPane.showInputDialog("Informe o nome do cliente: ");
        
        
        ArrayList<Cliente> clientes = ClienteDAO.queryByNome(nome);

        if(!clientes.isEmpty())
        {
            Map<Integer,Cliente> clis = new HashMap<Integer,Cliente>();

            String col[] =  {"ID","Nome","Endereço","Telefone"};

            DefaultTableModel tableModel = new DefaultTableModel(col,0);


            jDialogTabela tabela = new jDialogTabela(this,true,tableModel);


            for(Cliente cliente : clientes )
            {
                clis.put(cliente.getId(), cliente);

                Object[] data = {cliente.getId(),cliente.getNome(),
                    cliente.getEndereco(),cliente.getTelefone()};


                tableModel.addRow(data);
            }



            int id = -1;

            id = tabela.showWindow();

            Cliente cli = clis.get(id);

            if(id != -1)
            {
                JFrameCadCliente janela = new JFrameCadCliente(cli,Mode.DELETE);
                janela.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(rootPane,"Nenhum Cliente Selecionado!");
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Cliente Não encontrado!");
    }//GEN-LAST:event_menuDelClienteActionPerformed

    private void menuCadPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCadPedidoActionPerformed
       new JFrameCadPedido().setVisible(true);
    }//GEN-LAST:event_menuCadPedidoActionPerformed

    private void menuCadProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCadProActionPerformed
        new JFrameCadProduto().setVisible(true);
    }//GEN-LAST:event_menuCadProActionPerformed

    private void menuEditProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEditProActionPerformed
        String descricao = JOptionPane.showInputDialog("Informe a descrição do produto: ");
        
        
        ArrayList<Produto> produtos = ProdutoDAO.queryByDescricao(descricao);

        if(!produtos.isEmpty())
        {
            Map<Integer,Produto> pros = new HashMap<Integer,Produto>();

            String col[] =  {"ID","Descrição","Preço","Tipo"};

            DefaultTableModel tableModel = new DefaultTableModel(col,0);


            jDialogTabela tabela = new jDialogTabela(this,true,tableModel);


            for(Produto produto : produtos )
            {
                pros.put(produto.getId(), produto);

                Object[] data = {produto.getId(),produto.getDescricao(),
                                 produto.getPreco(), produto.getTipo().getDescricao()
                };


                tableModel.addRow(data);
            }



            int id = -1;

            id = tabela.showWindow();

            Produto pro = pros.get(id);

            if(id != -1)
            {
                JFrameCadProduto janela = new JFrameCadProduto(pro,Mode.EDIT);
                janela.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(rootPane,"Nenhum produto Selecionado!");
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Produto Não encontrado!");
        
    }//GEN-LAST:event_menuEditProActionPerformed

    private void menuDelProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDelProActionPerformed
        String descricao = JOptionPane.showInputDialog("Informe a descrição do produto: ");
        
        
        ArrayList<Produto> produtos = ProdutoDAO.queryByDescricao(descricao);

        if(!produtos.isEmpty())
        {
            Map<Integer,Produto> pros = new HashMap<Integer,Produto>();

            String col[] =  {"ID","Descrição","Preço","Tipo"};

            DefaultTableModel tableModel = new DefaultTableModel(col,0);


            jDialogTabela tabela = new jDialogTabela(this,true,tableModel);


            for(Produto produto : produtos )
            {
                pros.put(produto.getId(), produto);

                Object[] data = {produto.getId(),produto.getDescricao(),
                                 produto.getPreco(), produto.getTipo().getDescricao()
                };


                tableModel.addRow(data);
            }



            int id = -1;

            id = tabela.showWindow();

            Produto pro = pros.get(id);

            if(id != -1)
            {
                JFrameCadProduto janela = new JFrameCadProduto(pro,Mode.DELETE);
                janela.setVisible(true);
            }
            else
                JOptionPane.showMessageDialog(rootPane,"Nenhum produto Selecionado!");
        }
        else
            JOptionPane.showMessageDialog(rootPane, "Produto Não encontrado!");
    }//GEN-LAST:event_menuDelProActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jFrameTelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jFrameTelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jFrameTelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jFrameTelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jFrameTelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuCadCliente;
    private javax.swing.JMenuItem menuCadPedido;
    private javax.swing.JMenuItem menuCadPro;
    private javax.swing.JMenu menuCliente;
    private javax.swing.JMenuItem menuDelCliente;
    private javax.swing.JMenuItem menuDelPro;
    private javax.swing.JMenuItem menuEditCliente;
    private javax.swing.JMenuItem menuEditPro;
    // End of variables declaration//GEN-END:variables
}
